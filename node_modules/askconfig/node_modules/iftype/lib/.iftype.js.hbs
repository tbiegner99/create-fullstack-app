/**
 * Type check instance.
 * @constructor Iftype
 * @param {*} value - Value to check.
 */

'use strict'

const is = require('./is')

/** @lends Iftype */
function Iftype(val) {
  this.val(val)
}

Iftype.prototype = {
  /**
   * Detect type matches.
   * @param {string} type
   * @returns {boolean} - Type matches or not.
   */
  is: function typeIs(type) {
   return is(type, this.val())
  },
{{#each types}}
  /**
   * Detect if {{this}}.
   * @returns {boolean} - Type matches or not.
   */
  is{{pascalcase this}}: function is{{pascalcase this}}Type() {
   const s = this
   return s.is('{{this}}')
  },
{{/each}}
  val: function(val){
   if (arguments.length === 0) {
    return this._val;
   }
   this._val = val
   return this
  }
}

module.exports = Iftype
