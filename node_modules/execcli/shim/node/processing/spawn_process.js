/**
 * @function spawnProcess
 */
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var childProcess = require('child_process');
/** @lends spawnProcess */


function spawnProcess(_x, _x2) {
  return _spawnProcess.apply(this, arguments);
}

function _spawnProcess() {
  _spawnProcess = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(bin, args) {
    var options,
        _options$suppressOut,
        suppressOut,
        _args = arguments;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};
            _options$suppressOut = options.suppressOut, suppressOut = _options$suppressOut === void 0 ? false : _options$suppressOut;
            return _context.abrupt("return", new Promise(function (resolve, reject) {
              var spawned = childProcess.spawn(bin, args, options);

              if (!suppressOut) {
                spawned.stdout.pipe(process.stdout);
                spawned.stderr.pipe(process.stderr);
              }

              spawned.on('exit', function (exitCode) {
                var err = exitCode === 0 ? null : new Error("Exit with code: ".concat(exitCode));
                err ? reject(err) : resolve();
              });
              return spawned;
            }));

          case 3:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _spawnProcess.apply(this, arguments);
}

module.exports = spawnProcess;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwYXduX3Byb2Nlc3MuanMiXSwibmFtZXMiOlsiY2hpbGRQcm9jZXNzIiwicmVxdWlyZSIsInNwYXduUHJvY2VzcyIsImJpbiIsImFyZ3MiLCJvcHRpb25zIiwic3VwcHJlc3NPdXQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInNwYXduZWQiLCJzcGF3biIsInN0ZG91dCIsInBpcGUiLCJwcm9jZXNzIiwic3RkZXJyIiwib24iLCJleGl0Q29kZSIsImVyciIsIkVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUdBOzs7Ozs7OztBQUVBLElBQU1BLFlBQVksR0FBR0MsT0FBTyxDQUFDLGVBQUQsQ0FBNUI7QUFFQTs7O1NBQ2VDLFk7Ozs7Ozs7NEJBQWYsaUJBQTZCQyxHQUE3QixFQUFrQ0MsSUFBbEM7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF3Q0MsWUFBQUEsT0FBeEMsMkRBQWtELEVBQWxEO0FBQUEsbUNBR01BLE9BSE4sQ0FFSUMsV0FGSixFQUVJQSxXQUZKLHFDQUVrQixLQUZsQjtBQUFBLDZDQUlTLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDdEMsa0JBQU1DLE9BQU8sR0FBR1YsWUFBWSxDQUFDVyxLQUFiLENBQW1CUixHQUFuQixFQUF3QkMsSUFBeEIsRUFBOEJDLE9BQTlCLENBQWhCOztBQUNBLGtCQUFJLENBQUNDLFdBQUwsRUFBa0I7QUFDaEJJLGdCQUFBQSxPQUFPLENBQUNFLE1BQVIsQ0FBZUMsSUFBZixDQUFvQkMsT0FBTyxDQUFDRixNQUE1QjtBQUNBRixnQkFBQUEsT0FBTyxDQUFDSyxNQUFSLENBQWVGLElBQWYsQ0FBb0JDLE9BQU8sQ0FBQ0MsTUFBNUI7QUFDRDs7QUFDREwsY0FBQUEsT0FBTyxDQUFDTSxFQUFSLENBQVcsTUFBWCxFQUFtQixVQUFVQyxRQUFWLEVBQW9CO0FBQ3JDLG9CQUFJQyxHQUFHLEdBQUdELFFBQVEsS0FBSyxDQUFiLEdBQWlCLElBQWpCLEdBQXdCLElBQUlFLEtBQUosMkJBQTZCRixRQUE3QixFQUFsQztBQUNBQyxnQkFBQUEsR0FBRyxHQUFHVCxNQUFNLENBQUNTLEdBQUQsQ0FBVCxHQUFpQlYsT0FBTyxFQUEzQjtBQUNELGVBSEQ7QUFJQSxxQkFBT0UsT0FBUDtBQUNELGFBWE0sQ0FKVDs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O0FBa0JBVSxNQUFNLENBQUNDLE9BQVAsR0FBaUJuQixZQUFqQiIsInNvdXJjZVJvb3QiOiIuLi8uLi9saWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmdW5jdGlvbiBzcGF3blByb2Nlc3NcbiAqL1xuJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IGNoaWxkUHJvY2VzcyA9IHJlcXVpcmUoJ2NoaWxkX3Byb2Nlc3MnKVxuXG4vKiogQGxlbmRzIHNwYXduUHJvY2VzcyAqL1xuYXN5bmMgZnVuY3Rpb24gc3Bhd25Qcm9jZXNzIChiaW4sIGFyZ3MsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCB7XG4gICAgc3VwcHJlc3NPdXQgPSBmYWxzZVxuICB9ID0gb3B0aW9uc1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IHNwYXduZWQgPSBjaGlsZFByb2Nlc3Muc3Bhd24oYmluLCBhcmdzLCBvcHRpb25zKVxuICAgIGlmICghc3VwcHJlc3NPdXQpIHtcbiAgICAgIHNwYXduZWQuc3Rkb3V0LnBpcGUocHJvY2Vzcy5zdGRvdXQpXG4gICAgICBzcGF3bmVkLnN0ZGVyci5waXBlKHByb2Nlc3Muc3RkZXJyKVxuICAgIH1cbiAgICBzcGF3bmVkLm9uKCdleGl0JywgZnVuY3Rpb24gKGV4aXRDb2RlKSB7XG4gICAgICBsZXQgZXJyID0gZXhpdENvZGUgPT09IDAgPyBudWxsIDogbmV3IEVycm9yKGBFeGl0IHdpdGggY29kZTogJHtleGl0Q29kZX1gKVxuICAgICAgZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKClcbiAgICB9KVxuICAgIHJldHVybiBzcGF3bmVkXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3Bhd25Qcm9jZXNzXG4iXX0=