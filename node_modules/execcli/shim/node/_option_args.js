/**
 * @function _optionArgs
 * @private
 */
'use strict';

var stringcase = require('stringcase');

var arrayreduce = require('arrayreduce');
/** @lends _optionArgs */


function _optionArgs(options) {
  return Object.keys(options).filter(function (key) {
    var value = options[key];
    var empty = value === undefined || value === null || value === '' || value === false;
    return !empty;
  }).map(function (key) {
    var prefix = key.length === 1 ? '-' : '--';
    var prefixedKey = prefix + stringcase.spinalcase(key).replace(/^\-+/, '');
    var value = options[key];

    if (value === true) {
      return [prefixedKey];
    } else {
      return [].concat(value || []).map(function (value) {
        return [prefixedKey, value];
      }).reduce(arrayreduce.arrayConcat(), []);
    }
  }).reduce(arrayreduce.arrayConcat(), []);
}

module.exports = _optionArgs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9vcHRpb25fYXJncy5qcyJdLCJuYW1lcyI6WyJzdHJpbmdjYXNlIiwicmVxdWlyZSIsImFycmF5cmVkdWNlIiwiX29wdGlvbkFyZ3MiLCJvcHRpb25zIiwiT2JqZWN0Iiwia2V5cyIsImZpbHRlciIsImtleSIsInZhbHVlIiwiZW1wdHkiLCJ1bmRlZmluZWQiLCJtYXAiLCJwcmVmaXgiLCJsZW5ndGgiLCJwcmVmaXhlZEtleSIsInNwaW5hbGNhc2UiLCJyZXBsYWNlIiwiY29uY2F0IiwicmVkdWNlIiwiYXJyYXlDb25jYXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUtBOztBQUVBLElBQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLFlBQUQsQ0FBMUI7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUEzQjtBQUVBOzs7QUFDQSxTQUFTRSxXQUFULENBQXNCQyxPQUF0QixFQUErQjtBQUM3QixTQUFPQyxNQUFNLENBQUNDLElBQVAsQ0FBWUYsT0FBWixFQUNKRyxNQURJLENBQ0csVUFBQ0MsR0FBRCxFQUFTO0FBQ2YsUUFBSUMsS0FBSyxHQUFHTCxPQUFPLENBQUVJLEdBQUYsQ0FBbkI7QUFDQSxRQUFJRSxLQUFLLEdBQUlELEtBQUssS0FBS0UsU0FBWCxJQUEwQkYsS0FBSyxLQUFLLElBQXBDLElBQThDQSxLQUFLLEtBQUssRUFBeEQsSUFBZ0VBLEtBQUssS0FBSyxLQUF0RjtBQUNBLFdBQU8sQ0FBQ0MsS0FBUjtBQUNELEdBTEksRUFNSkUsR0FOSSxDQU1BLFVBQUNKLEdBQUQsRUFBUztBQUNaLFFBQUlLLE1BQU0sR0FBR0wsR0FBRyxDQUFDTSxNQUFKLEtBQWUsQ0FBZixHQUFtQixHQUFuQixHQUF5QixJQUF0QztBQUNBLFFBQUlDLFdBQVcsR0FBR0YsTUFBTSxHQUFHYixVQUFVLENBQUNnQixVQUFYLENBQXNCUixHQUF0QixFQUEyQlMsT0FBM0IsQ0FBbUMsTUFBbkMsRUFBMkMsRUFBM0MsQ0FBM0I7QUFDQSxRQUFJUixLQUFLLEdBQUdMLE9BQU8sQ0FBRUksR0FBRixDQUFuQjs7QUFDQSxRQUFJQyxLQUFLLEtBQUssSUFBZCxFQUFvQjtBQUNsQixhQUFPLENBQUVNLFdBQUYsQ0FBUDtBQUNELEtBRkQsTUFFTztBQUNMLGFBQU8sR0FBR0csTUFBSCxDQUFVVCxLQUFLLElBQUksRUFBbkIsRUFBdUJHLEdBQXZCLENBQTJCLFVBQUNILEtBQUQsRUFBVztBQUMzQyxlQUFPLENBQUVNLFdBQUYsRUFBZU4sS0FBZixDQUFQO0FBQ0QsT0FGTSxFQUVKVSxNQUZJLENBRUdqQixXQUFXLENBQUNrQixXQUFaLEVBRkgsRUFFOEIsRUFGOUIsQ0FBUDtBQUdEO0FBQ0YsR0FqQkksRUFpQkZELE1BakJFLENBaUJLakIsV0FBVyxDQUFDa0IsV0FBWixFQWpCTCxFQWlCZ0MsRUFqQmhDLENBQVA7QUFrQkQ7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLFdBQWpCIiwic291cmNlUm9vdCI6Ii4uLy4uL2xpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZ1bmN0aW9uIF9vcHRpb25BcmdzXG4gKiBAcHJpdmF0ZVxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG5jb25zdCBzdHJpbmdjYXNlID0gcmVxdWlyZSgnc3RyaW5nY2FzZScpXG5jb25zdCBhcnJheXJlZHVjZSA9IHJlcXVpcmUoJ2FycmF5cmVkdWNlJylcblxuLyoqIEBsZW5kcyBfb3B0aW9uQXJncyAqL1xuZnVuY3Rpb24gX29wdGlvbkFyZ3MgKG9wdGlvbnMpIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9wdGlvbnMpXG4gICAgLmZpbHRlcigoa2V5KSA9PiB7XG4gICAgICBsZXQgdmFsdWUgPSBvcHRpb25zWyBrZXkgXVxuICAgICAgbGV0IGVtcHR5ID0gKHZhbHVlID09PSB1bmRlZmluZWQpIHx8ICh2YWx1ZSA9PT0gbnVsbCkgfHwgKHZhbHVlID09PSAnJykgfHwgKHZhbHVlID09PSBmYWxzZSlcbiAgICAgIHJldHVybiAhZW1wdHlcbiAgICB9KVxuICAgIC5tYXAoKGtleSkgPT4ge1xuICAgICAgbGV0IHByZWZpeCA9IGtleS5sZW5ndGggPT09IDEgPyAnLScgOiAnLS0nXG4gICAgICBsZXQgcHJlZml4ZWRLZXkgPSBwcmVmaXggKyBzdHJpbmdjYXNlLnNwaW5hbGNhc2Uoa2V5KS5yZXBsYWNlKC9eXFwtKy8sICcnKVxuICAgICAgbGV0IHZhbHVlID0gb3B0aW9uc1sga2V5IF1cbiAgICAgIGlmICh2YWx1ZSA9PT0gdHJ1ZSkge1xuICAgICAgICByZXR1cm4gWyBwcmVmaXhlZEtleSBdXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gW10uY29uY2F0KHZhbHVlIHx8IFtdKS5tYXAoKHZhbHVlKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIFsgcHJlZml4ZWRLZXksIHZhbHVlIF1cbiAgICAgICAgfSkucmVkdWNlKGFycmF5cmVkdWNlLmFycmF5Q29uY2F0KCksIFtdKVxuICAgICAgfVxuICAgIH0pLnJlZHVjZShhcnJheXJlZHVjZS5hcnJheUNvbmNhdCgpLCBbXSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfb3B0aW9uQXJnc1xuIl19